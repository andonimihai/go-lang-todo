definitions:
  entity.Todo:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      state:
        type: string
      title:
        type: string
      todoListID:
        type: integer
      updatedAt:
        type: string
      userID:
        type: integer
    type: object
  entity.UpsertTodo:
    properties:
      title:
        type: string
    required:
    - title
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
host: localhost:3009
info:
  contact: {}
  description: This is a server to manage todos
  title: Simple Todo API
  version: "1.0"
paths:
  /todo:
    get:
      description: Fetch a list of Todos that belongs to logged in user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.Todo'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get all todos
    post:
      consumes:
      - application/json
      description: Add a new todo to the list
      parameters:
      - description: Add new todo
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/entity.UpsertTodo'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entity.Todo'
      security:
      - ApiKeyAuth: []
      summary: Add a new todo
  /todo/{id}:
    delete:
      consumes:
      - application/json
      description: delete Todo by ID
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete Todo
    get:
      consumes:
      - application/json
      description: get Todo by ID
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Todo'
      security:
      - ApiKeyAuth: []
      summary: Fetch single Todo Item
    put:
      consumes:
      - application/json
      description: update Todo by ID
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update todo
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/entity.UpsertTodo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Todo'
      security:
      - ApiKeyAuth: []
      summary: Update existing Todo
  /todo/{id}/complete:
    put:
      consumes:
      - application/json
      description: complete Todo by ID
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Todo'
      security:
      - ApiKeyAuth: []
      summary: Complete a Todo
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
